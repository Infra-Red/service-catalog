kind: pipeline
type: docker
name: linux-amd64-test

platform:
  arch: amd64
  os: linux

steps:
- name: test
  image: docker.io/drycc/go-dev
  pull: always
  privileged: true
  commands:
  - contrib/hack/ci/test.sh
  environment:
    VERSION: ${DRONE_TAG:-latest}-linux-amd64
    DRONE_TAG: ${DRONE_TAG:-none}
    DEV_REGISTRY: ${DEV_REGISTRY:-docker.io}
    DRYCC_REGISTRY: ${DRYCC_REGISTRY:-docker.io}
  when:
    event:
    - push
    - tag
    - pull_request
  volumes:
  - name: image_registries
    path: /etc/containers/registries.conf

trigger:
  event:
  - push
  - tag
  - pull_request

volumes:
- name: image_registries
  host:
    path: /etc/containers/registries.conf

---
kind: pipeline
type: docker
name: linux-amd64-docs

platform:
  arch: amd64
  os: linux

steps:
- name: build-docs
  image: docker.io/drycc/go-dev
  privileged: true
  commands:
  - mkdir -p docsite/.bundler
  - make docs
  - cd docsite/_site && echo "service-catalog.drycc.cc" >> CNAME && git init
  environment:
    SSH_DEPLOY_KEY:
      from_secret: ssh_deploy_key
  when:
    event:
    - push
    - tag
  volumes:
  - name: image_registries
    path: /etc/containers/registries.conf

- name: publish-docs
  image: docker.io/appleboy/drone-git-push
  pull: always
  settings:
    branch: main
    remote: git@github.com:drycc/service-catalog.drycc.cc.git
    path: docsite/_site
    force: true
    commit: true
    commit_message: init repo
    ssh_key:
      from_secret: ssh_deploy_key
  when:
    event:
    - push
    - tag
depends_on:
- linux-amd64-test

---
kind: pipeline
type: exec
name: linux-amd64-test-e2e

platform:
  arch: amd64
  os: linux

steps:
- name: test-e2e
  commands:
  - make test-e2e
  when:
    event:
    - push
    - tag
    - pull_request

trigger:
  event:
  - push
  - tag
  - pull_request

depends_on:
- linux-amd64-test

---
kind: pipeline
type: docker
name: linux-amd64-coverage

platform:
  arch: amd64
  os: linux

steps:
- name: make coverage
  image: docker.io/drycc/go-dev
  pull: always
  privileged: true
  commands:
  - make coverage
  when:
    event:
    - push
    - tag
  volumes:
  - name: image_registries
    path: /etc/containers/registries.conf

- name: publish codecov
  image: docker.io/drycc/go-dev
  pull: always
  commands:
  - curl -s https://codecov.io/bash | bash
  environment:
    CODECOV_TOKEN:
      from_secret: codecov_token
  when:
    status:
    - success

trigger:
  event:
  - push
  - tag

depends_on:
- linux-amd64-test

volumes:
- name: image_registries
  host:
    path: /etc/containers/registries.conf

---
kind: pipeline
type: docker
name: linux-amd64-image

steps:
- name: make image
  image: docker.io/drycc/go-dev
  pull: always
  privileged: true
  commands:
  - echo $DOCKER_PASSWORD | docker login $DRYCC_REGISTRY --username $DOCKER_USERNAME --password-stdin
  - make service-catalog-push
  environment:
    ARCH: amd64
    VERSION: ${DRONE_TAG:-latest}-linux-amd64
    DEV_REGISTRY:
      from_secret: dev_registry
    DRYCC_REGISTRY:
      from_secret: drycc_registry
    DOCKER_USERNAME:
      from_secret: docker_username
    DOCKER_PASSWORD:
      from_secret: docker_password
  when:
    event:
    - push
    - tag
  volumes:
  - name: image_registries
    path: /etc/containers/registries.conf

trigger:
  event:
  - push
  - tag

depends_on:
- linux-amd64-test

volumes:
- name: image_registries
  host:
    path: /etc/containers/registries.conf

---
kind: pipeline
type: docker
name: linux-arm64-image

platform:
  arch: arm64
  os: linux

steps:
- name: make image
  image: docker.io/drycc/go-dev
  pull: always
  privileged: true
  commands:
  - echo $DOCKER_PASSWORD | docker login $DRYCC_REGISTRY --username $DOCKER_USERNAME --password-stdin
  - make service-catalog-push
  environment:
    ARCH: arm64
    VERSION: ${DRONE_TAG:-latest}-linux-arm64
    DEV_REGISTRY:
      from_secret: dev_registry
    DRYCC_REGISTRY:
      from_secret: drycc_registry
    DOCKER_USERNAME:
      from_secret: docker_username
    DOCKER_PASSWORD:
      from_secret: docker_password
  volumes:
  - name: image_registries
    path: /etc/containers/registries.conf

trigger:
  event:
  - push
  - tag

depends_on:
- linux-amd64-test

volumes:
- name: image_registries
  host:
    path: /etc/containers/registries.conf

---
kind: pipeline
type: docker
name: manifest image

steps:
- name: generate manifest
  image: docker.io/library/alpine
  pull: always
  commands:
  - sed -i "s/docker.io/$${DRYCC_REGISTRY}/g" .drone/manifest.tmpl
  environment:
    DRYCC_REGISTRY:
      from_secret: drycc_registry

- name: publish
  image: plugins/manifest
  settings:
    spec: .drone/manifest.tmpl
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
  environment:
    DEV_REGISTRY:
      from_secret: dev_registry
    DRYCC_REGISTRY:
      from_secret: drycc_registry

trigger:
  event:
  - push
  - tag

depends_on:
- linux-amd64-image
- linux-arm64-image

---
kind: pipeline
type: docker
name: output

steps:
- name: generate chart catalog
  image: docker.io/drycc/python-dev
  commands:
  - IMAGE_TAG=$([ ! -z $DRONE_TAG ] && echo \"${DRONE_TAG:1}\" || echo \"canary\")
  - sed -i "s/image_tag:\ \"canary\"/image_tag:\ $IMAGE_TAG/g" charts/catalog/values.yaml
  - helm package charts/catalog --version ${DRONE_TAG:-v1.0.0}
  - curl -u $CHARTMUSEUM_USERNAME:$CHARTMUSEUM_PASSWORD -F chart=@catalog-${DRONE_TAG:-v1.0.0}.tgz "$CHARTMUSEUM_API/api/$([ -z $DRONE_TAG ] && echo testing || echo stable)/charts"
  environment:
    CHARTMUSEUM_USERNAME:
      from_secret: chartmuseum_username
    CHARTMUSEUM_PASSWORD:
      from_secret: chartmuseum_password
    CHARTMUSEUM_API:
      from_secret: chartmuseum_api

- name: make svcat
  image: docker.io/drycc/go-dev
  pull: always
  privileged: true
  commands:
  - make svcat-all
  environment:
    DEV_REGISTRY:
      from_secret: dev_registry
    DRYCC_REGISTRY:
      from_secret: drycc_registry
  volumes:
    - name: image_registries
      path: /etc/containers/registries.conf
  when:
    event: tag

- name: release svcat
  image: plugins/github-release
  settings:
    api_key:
      from_secret: github_token
    files: bin/svcat/*
  when:
    event: tag

depends_on:
- linux-amd64-test

trigger:
  event:
  - push
  - tag
